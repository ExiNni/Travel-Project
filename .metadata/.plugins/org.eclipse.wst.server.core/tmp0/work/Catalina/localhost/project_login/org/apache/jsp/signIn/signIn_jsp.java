/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-11-14 06:08:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.signIn;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signIn_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"signIn.css\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<form action=\"");
      out.print( request.getContextPath() );
      out.write("/LoginServlet?action=signIn\" method=\"post\">\r\n");
      out.write("		<section>\r\n");
      out.write("			<h1>회원가입</h1>\r\n");
      out.write("			<div>\r\n");
      out.write("				<label for=\"user_name\">이름 : <em> * </em>\r\n");
      out.write("				</label> <input type=\"text\" id=\"user_name\" name=\"user_name\" required>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div>\r\n");
      out.write("				<label for=\"user_id\">아이디 : <em> * </em>\r\n");
      out.write("				</label> <input type=\"text\" id=\"user_id\" name=\"user_id\" required>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div>\r\n");
      out.write("				<label for=\"user_pw\">비밀번호 :<em> * </em>\r\n");
      out.write("				</label> <input type=\"password\" id=\"user_pw\" name=\"user_pw\" required>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div>\r\n");
      out.write("				<label for=\"user_phone\"> 전화번호 : <em> * </em>\r\n");
      out.write("				</label> <input type=\"tel\" id=\"user_phone\" name=\"user_phone\" required><br>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div>\r\n");
      out.write("				<label for=\"user_email\">이메일 : </label><br> <input type=\"email\"\r\n");
      out.write("					id=\"user_email\" name=\"user_email\"><br>\r\n");
      out.write("			</div>\r\n");
      out.write("			<br>\r\n");
      out.write("			<p>\r\n");
      out.write("				<label for=\"user_age\">생년월일 : </label> <input type=\"date\"\r\n");
      out.write("					id=\"user_age\" name=\"user_age\">\r\n");
      out.write("			</p>\r\n");
      out.write("\r\n");
      out.write("			<p>\r\n");
      out.write("				<label for=\"user_sex\">성별 : </label> <input type=\"radio\"\r\n");
      out.write("					name=\"user_sex\" value=\"남\">남성 <input type=\"radio\"\r\n");
      out.write("					name=\"user_sex\" value=\"여\">여성\r\n");
      out.write("			</p>\r\n");
      out.write("\r\n");
      out.write("			<o>\r\n");
      out.write("			<button type=\"submit\" onclick=\"Validation()\">회원 가입</button>\r\n");
      out.write("			<button type=\"reset\" onclick=\"alert('초기화 했습니다.')\">다시 입력</button>\r\n");
      out.write("			</o>\r\n");
      out.write("		</section>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		function Validation() {\r\n");
      out.write("			var user_pw = document.getElementById(\"user_pw\")\r\n");
      out.write("			var user_id = document.getElementById(\"user_id\")\r\n");
      out.write("			var user_name = document.getElementById(\"user_name\")\r\n");
      out.write("			var user_phone = document.getElementById(\"user_phone\")\r\n");
      out.write("			var user_age = document.getElementById(\"user_age\")\r\n");
      out.write("\r\n");
      out.write("			var reguser_phone = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/\r\n");
      out.write("			var reguser_pw = /^(?=.*[a-zA-Z])(?=.*[0-9]).{10,12}$/;\r\n");
      out.write("\r\n");
      out.write("			if (user_name.value == \"\") {\r\n");
      out.write("				alert(\"이름을 입력하세요.\")\r\n");
      out.write("				user_name.focus();\r\n");
      out.write("\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if (user_id.value == \"\") {\r\n");
      out.write("				alert(\"아이디를 입력하세요.\")\r\n");
      out.write("				user_id.focus();\r\n");
      out.write("\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if (user_pw.value == \"\") {\r\n");
      out.write("				alert(\"비밀번호를 입력하세요.\")\r\n");
      out.write("				user_pw.focus();\r\n");
      out.write("\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			else if (!reguser_pw.test(user_pw.value)) {\r\n");
      out.write("				alert(\"10~12자 영문 대소문자, 숫자를 이용해 입력하세요.\")\r\n");
      out.write("				user_pw.focus();\r\n");
      out.write("\r\n");
      out.write("				return false;\r\n");
      out.write("			} else if (user_pw.value == user_id.value) {\r\n");
      out.write("				alert(\"아이디와 동일한 비밀번호를 사용할 수 없습니다.\")\r\n");
      out.write("				user_pw.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if (user_phone.value == \"\") {\r\n");
      out.write("				alert(\"전화번호를 입력하세요.\")\r\n");
      out.write("				user_phone.focus();\r\n");
      out.write("\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if (user_age.value == \"\") {\r\n");
      out.write("				alert(\"생년월일을 입력하세요\")\r\n");
      out.write("				user_age.focus();\r\n");
      out.write("\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			return true;\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
