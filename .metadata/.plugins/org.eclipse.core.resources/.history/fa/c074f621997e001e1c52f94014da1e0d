package com.kh.product;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class ProductServlet
 */
@WebServlet("/ProductServlet")
public class ProductServlet extends HttpServlet {
	
	private static final String jdbcURL = "jdbc:oracle:thin:@localhost:1521:xe";
	private static final String jdbcUsername = "khbank";
	private static final String jdbcUserpw = "1234";
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.getWriter().append("Served at: ").append(request.getContextPath());
		
		Connection connect = null;
		
		// 데이터베이스 연결
		try {
			Class.forName("oracle.jdbc.OracleDriver"); // Class.forName("oracle.jdbc.driver.OracleDriver") 이전 버전
			connect = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcUserpw);
			
			// SQL 쿼리
			String sql = "SELECT * FROM PRODUCTS";
			PreparedStatement ps = connect.prepareStatement(sql);
			
			ResultSet rs = ps.executeQuery();
			
			// 제품목록을 저장할 장바구니 같은 ArrayList 생성
			ArrayList<Product> productList = new ArrayList<>();
			
			while(rs.next()) {
				int productId = rs.getInt("product_id");
				String productName = rs.getString("product_name");
				String category = rs.getString("category");
				double price = rs.getDouble("price");
				int stockQuantity = rs.getInt("stock_quantity");
				
				Product product = new Product(productId, productName, category, price, stockQuantity);
				// productList에 제품들을 하나씩 Add 해서 넣어줌
				productList.add(product);
			}
			
			// JSP 제품 목록 페이지로 제품 목록을 전달하자!
			request.setAttribute("productList", productList);
			request.getRequestDispatcher("productList.jsp");
			
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		} 
		
		
	}
}
